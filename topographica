#!/usr/bin/env python
# Typical way to launch Topographica; simply extends module search
# path and processes command-line arguments

# Make sure submodules can be found (only needed for git installation)
import os,sys
(basepath, _) = os.path.split(os.path.abspath(__file__))
sys.path.append(os.path.join(basepath, 'external', 'param'))
sys.path.append(os.path.join(basepath, 'external', 'paramtk'))
sys.path.append(os.path.join(basepath, 'external', 'imagen'))
sys.path.append(os.path.join(basepath, 'external', 'lancet'))

# Need to check this here, not using process_argv() and before importing
# topo as the release file doesn't exist yet
from sys import argv
from subprocess import Popen, check_output, CalledProcessError, PIPE

if len(argv) > 1 and argv[1] == 'make-release-file':
    # MAj changed 20130227: call 'git describe' and check it outputs
    try:
        git_result = check_output(["git", "describe"])
        #print "### git result: ", git_result
    except CalledProcessError:
        print "### \"git describe\" returned an error. Maybe running script not in GIT directory.\n"
        sys.exit(1)

    try:
        release_file = open(basepath + "/topo/.release", "w")
        release_file.write(git_result)
        release_file.close()
    except IOError:
        print "Falied to create the release file %s" % basepath + "/topo/.release"
        sys.exit(1)
    print "The release file has been created successfully."
    sys.exit(0)

import topo

# Process the command-line arguments
from topo.misc.commandline import process_argv
process_argv(argv[1:])
